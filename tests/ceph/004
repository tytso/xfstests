#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2020 SUSE Linux Products GmbH. All Rights Reserved.
#
# FS QA Test 004
#
# Tests a bug fix found in cephfs quotas handling.  Here's a simplified testcase
# that *should* fail:
#
#    mkdir files limit
#    truncate files/file -s 10G
#    setfattr limit -n ceph.quota.max_bytes -v 1000000
#    mv files limit/
#
# Because we're creating a new file and truncating it, we have Fx caps and thus
# the truncate operation will be cached.  This prevents the MDSs from updating
# the quota realms and thus the client will allow the above rename(2) to happen.
#
# The bug resulted in dropping support for cross quota-realms renames, reverting
# kernel commit dffdcd71458e ("ceph: allow rename operation under different
# quota realms").
#
# So, the above test will now fail with a -EXDEV or, in the future (when we have
# a proper fix), with -EDQUOT.
#
# This bug was tracker here:
#
#   https://tracker.ceph.com/issues/48203
#
. ./common/preamble
_begin_fstest auto quick quota

# Import common functions.
. ./common/filter
. ./common/attr

# real QA test starts here

_supported_fs ceph
_require_attrs
_require_test
_require_test_program "rename"
_require_ceph_vxattr_caps # we need to get file capabilities

workdir=$TEST_DIR/test-$seq

orig1=$workdir/orig1
orig2=$workdir/orig2
file1=$orig1/file
file2=$orig2/file
dest=$workdir/dest

rm -rf $workdir
mkdir $workdir
mkdir $orig1 $orig2 $dest

# get only the hexadecimal value of the ceph.caps vxattr, which has the
# following format:
#   ceph.caps="pAsLsXsFscr/0xd55"
get_ceph_caps()
{
	$GETFATTR_PROG --only-values -n "ceph.caps" $1 2>/dev/null \
	    | cut -d / -f2
}

# check that a file has cephfs capabilities 'Fs'
check_Fs_caps()
{
	caps=`get_ceph_caps $1`
	# Fs cap is bit (1 << 8)
	Fs=$((1 << 8))
	res=$(($caps & $Fs))
	if [ $res -ne $Fs ]; then
		_fail "File $1 doesn't have Fs caps ($caps)"
	fi
}

# set quota to 1m
$SETFATTR_PROG -n ceph.quota.max_bytes -v 1000000 $dest
# set quota to 20g
$SETFATTR_PROG -n ceph.quota.max_bytes -v 20000000000 $orig2

#
# The following 2 testcases shall fail with either -EXDEV or -EDQUOT
#

# from 'root' realm to $dest realm
$XFS_IO_PROG -f -c "truncate 10G" $file1
check_Fs_caps $file1
$here/src/rename $orig1 $dest/new1 >> $seqres.full 2>&1
[ $? -ne 1 ] && _fail "cross quota realms rename succeeded"

# from $orig2 realm to $dest realm
$XFS_IO_PROG -f -c "truncate 10G" $file2
check_Fs_caps $file2
$here/src/rename $orig2 $dest/new2 >> $seqres.full 2>&1
[ $? -ne 1 ] && _fail "cross quota realms rename succeeded"

echo "Silence is golden"

# success, all done
status=0
exit
