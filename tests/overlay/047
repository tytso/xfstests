#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (C) 2016-2017 CTERA Networks. All Rights Reserved.
#
# FSQA Test No. 047
#
# Test hardlink breakage after unlink and mount cycle
#
# - file A and B are hardlinked in lower
# - modify A to trigger copy up and index lower
# - unlink A and mount cycle
# - check that B still contains the modified data
#
. ./common/preamble
_begin_fstest auto quick copyup hardlink

# Import common functions.
. ./common/filter

# real QA test starts here
_supported_fs overlay
_require_scratch
_require_scratch_feature index

_scratch_mkfs >>$seqres.full 2>&1

# Create 2 hardlinked files in lower
lowerdir=$OVL_BASE_SCRATCH_MNT/$OVL_LOWER
mkdir -p $lowerdir
echo "zero" >> $lowerdir/foo
ln $lowerdir/foo $lowerdir/bar

# Enable overlay index feature to prevent breaking hardlinks on copy up
_scratch_mount -o index=on

rm -f $tmp.*

foo=$SCRATCH_MNT/foo
bar=$SCRATCH_MNT/bar

FILES="$foo $bar"

echo "== Before copy up =="
cat $foo

# Modify content of one of the hardlinks
echo "one" >> $bar

echo "== After write one =="
cat $foo

# Unlink the copied up hardlink
rm $bar

echo "== After unlink one =="
cat $foo

# Verify that the hardlinks survive a mount cycle
_scratch_cycle_mount index=on

echo "== After mount cycle =="
cat $foo

# Drop caches to get the copied up hardlink out of cache
echo 3 > /proc/sys/vm/drop_caches

# Modify content of the other hardlink
echo "two" >> $foo

echo "== After write two =="
cat $foo

status=0
exit
