#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2016 Google, Inc.  All Rights Reserved.
#
# FS QA Test 019
#
# Run fsstress on lower dir and top dir at the same time
#
. ./common/preamble
_begin_fstest auto stress

# Import common functions.
. ./common/filter

# real QA test starts here
_supported_fs overlay
_require_scratch_nocheck

# Remove all files from previous tests
_scratch_mkfs

lowerdir=$OVL_BASE_SCRATCH_MNT/$OVL_LOWER
mkdir -p $lowerdir

_scratch_mount

echo "Silence is golden"

d_low=$lowerdir/fsstress
d_top=$SCRATCH_MNT/fsstress
mkdir -p $d_low $d_top

echo $FSSTRESS_PROG -s 42 -d $d_low -p 4 -n 1000 -l100 -v > $seqres.full.1
$FSSTRESS_PROG -s 42 -d $d_low -p 4 -n 1000 -l100 -v >> $seqres.full.1 2>&1 &

echo $FSSTRESS_PROG -s 42 -d $d_top -p 4 -n 1000 -l100 -v > $seqres.full.2
$FSSTRESS_PROG -s 42 -d $d_top -p 4 -n 1000 -l100 -v >> $seqres.full.2 2>&1 &

ret=0
if ! wait %1; then
	echo "--------------------------------------"       >>$seqres.full.1
	echo "fsstress on lower directory returned $? - see $seqres.full.1"
	echo "--------------------------------------"       >>$seqres.full.1
	ret=1
fi

if ! wait %2; then
	echo "--------------------------------------"       >>$seqres.full.2
	echo "fsstress on overlay directory returned $? - see $seqres.full.2"
	echo "--------------------------------------"       >>$seqres.full.2
	ret=1
fi

cat $seqres.full.1 $seqres.full.2 > $seqres.full
rm $seqres.full.1 $seqres.full.2

if [ "$ret" -eq 1 ]; then
	status=1
else
	status=0
fi

exit $status
