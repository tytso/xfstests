#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2020 Sidong Yang.  All Rights Reserved.
#
# FS QA Test 224
#
# Test the assign functionality of qgroups
#
. ./common/preamble
_begin_fstest auto quick qgroup

# Import common functions.
. ./common/filter
. ./common/reflink

# real QA test starts here

# Modify as appropriate.
_supported_fs btrfs

_require_scratch
_require_btrfs_qgroup_report
_require_cp_reflink

# Test assign qgroup for submodule with shared extents by reflink
assign_shared_test()
{
	_scratch_mkfs > /dev/null 2>&1
	_scratch_mount

	echo "=== qgroup assign shared test ===" >> $seqres.full
	$BTRFS_UTIL_PROG quota enable $SCRATCH_MNT
	$BTRFS_UTIL_PROG quota rescan -w $SCRATCH_MNT >> $seqres.full

	$BTRFS_UTIL_PROG subvolume create $SCRATCH_MNT/a >> $seqres.full
	$BTRFS_UTIL_PROG subvolume create $SCRATCH_MNT/b >> $seqres.full

	_ddt of="$SCRATCH_MNT"/a/file1 bs=1M count=1 >> $seqres.full 2>&1
	_cp_reflink "$SCRATCH_MNT"/a/file1 "$SCRATCH_MNT"/b/file1

	$BTRFS_UTIL_PROG qgroup create 1/100 $SCRATCH_MNT
	$BTRFS_UTIL_PROG qgroup assign $SCRATCH_MNT/a 1/100 $SCRATCH_MNT
	$BTRFS_UTIL_PROG qgroup assign $SCRATCH_MNT/b 1/100 $SCRATCH_MNT

	_scratch_unmount
	_check_scratch_fs
}

# Test assign qgroup for submodule without shared extents
assign_no_shared_test()
{
	_scratch_mkfs > /dev/null 2>&1
	_scratch_mount

	echo "=== qgroup assign no shared test ===" >> $seqres.full
	$BTRFS_UTIL_PROG quota enable $SCRATCH_MNT
	$BTRFS_UTIL_PROG quota rescan -w $SCRATCH_MNT >> $seqres.full

	$BTRFS_UTIL_PROG subvolume create $SCRATCH_MNT/a >> $seqres.full
	$BTRFS_UTIL_PROG subvolume create $SCRATCH_MNT/b >> $seqres.full

	$BTRFS_UTIL_PROG qgroup create 1/100 $SCRATCH_MNT
	$BTRFS_UTIL_PROG qgroup assign $SCRATCH_MNT/a 1/100 $SCRATCH_MNT
	$BTRFS_UTIL_PROG qgroup assign $SCRATCH_MNT/b 1/100 $SCRATCH_MNT

	_scratch_unmount
	_check_scratch_fs
}

# Test snapshot with assigning qgroup for submodule
snapshot_test()
{
	_scratch_mkfs > /dev/null 2>&1
	_scratch_mount

	echo "=== qgroup snapshot test ===" >> $seqres.full
	$BTRFS_UTIL_PROG quota enable $SCRATCH_MNT
	$BTRFS_UTIL_PROG quota rescan -w $SCRATCH_MNT >> $seqres.full

	$BTRFS_UTIL_PROG subvolume create $SCRATCH_MNT/a >> $seqres.full
	_ddt of="$SCRATCH_MNT"/a/file1 bs=1M count=1 >> $seqres.full 2>&1
	subvolid=$(_btrfs_get_subvolid $SCRATCH_MNT a)
	$BTRFS_UTIL_PROG subvolume snapshot -i 0/$subvolid $SCRATCH_MNT/a $SCRATCH_MNT/b >> $seqres.full

	_scratch_unmount
	_check_scratch_fs
}

assign_no_shared_test

assign_shared_test

snapshot_test

# success, all done
echo "Silence is golden"
status=0
exit
