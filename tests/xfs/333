#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2016, Oracle and/or its affiliates.  All Rights Reserved.
#
# FS QA Test No. 333
#
# Set rrmapino to another inode on an non-rt rmap fs and see if repair fixes it.
#
seq=`basename "$0"`
seqres="$RESULT_DIR/$seq"
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1    # failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

_cleanup()
{
	cd /
	rm -rf "$tmp".*
}

# get standard environment, filters and checks
. ./common/rc
. ./common/filter

# real QA test starts here
_supported_os Linux
_supported_fs xfs
_require_xfs_scratch_rmapbt
_disable_dmesg_check

rm -f "$seqres.full"

unset SCRATCH_RTDEV

echo "Format and mount"
_scratch_mkfs > "$seqres.full" 2>&1
rrmapino="$(_scratch_xfs_db -c 'sb 0' -c 'p rrmapino' 2>&1)"
test "${rrmapino}" = "field rrmapino not found" && _notrun "realtime rmapbt not supported"
_scratch_mount

echo "Create some files"
$XFS_IO_PROG -f -c "pwrite -S 0x68 0 9999" $SCRATCH_MNT/f1 >> $seqres.full
$XFS_IO_PROG -f -c "pwrite -S 0x68 0 9999" $SCRATCH_MNT/f2 >> $seqres.full
echo garbage > $SCRATCH_MNT/f3
ino=$(stat -c '%i' $SCRATCH_MNT/f3)
_scratch_unmount

echo "Corrupt fs"
_scratch_xfs_db -x -c 'sb 0' -c "write rrmapino $ino" >> $seqres.full
_try_scratch_mount 2>&1 | _filter_error_mount

echo "Repair, mount again"
_repair_scratch_fs >> $seqres.full
_scratch_mount 2>&1 | _filter_scratch

# success, all done
status=0
exit
