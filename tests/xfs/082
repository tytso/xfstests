#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2000-2003 Silicon Graphics, Inc.  All Rights Reserved.
#
# FS QA Test No. 082
#
# Test out the v2 stripe logs with logprint
#
seqfull=$0
. ./common/preamble
_begin_fstest deprecated # log logprint v2log

# Import common functions.
. ./common/filter
. ./common/log

# Override the default cleanup function.
_cleanup()
{
    cd /
    _cleanup_logfiles
    rm -f $tmp.*
    _scratch_unmount 2>/dev/null
}

# real QA test starts here
_supported_fs xfs

# prelim
_require_scratch
_require_v2log 

echo "*** init FS"
_scratch_unmount >/dev/null 2>&1

cat >$tmp.seq.params <<EOF
# mkfs-opt             mount-opt            start-blk
  version=2            logbsize=32k       2
  version=2,su=4096    logbsize=32k       8
  version=2,su=32768   logbsize=32k       64
#
# expect following line to fail
#
  version=2,su=36864   logbsize=32k       72
#
# following is not a power of 2 BBs 
#
  version=2,su=5120    logbsize=32k       10
EOF

# Do the work for various log params which
# should not effect the data content of the log
# Try with and without sync'ing - sync'ing will mean that
# the log will be written out unfilled and thus the log 
# stripe can have an effect.
#
for s in sync nosync ; do
    cat $tmp.seq.params \
    | while read mkfs mnt start restofline
    do
	if [ "$mkfs" = "#" ]; then 
	    continue
	fi
	echo "--- mkfs=$mkfs, mnt=$mnt, sync=$s ---"
	export MOUNT_OPTIONS="-o $mnt"
	if ! _mkfs_log "-l $mkfs"; then
	    continue
	fi	
	if [ $s = "sync" ]; then
	    _create_log_sync
	else
	    _create_log
	fi
	if [ $? -ne 0 ]; then
	    continue
	fi
	_check_log

	sync_suffix=".$s"

	if [ $s = "sync" ]; then
	    # if sync then we have chance of DATA FORK EXTENTS items
	    # not hanging around very long due to inode syncing to disk
	    # (see comment in xfs_iflush_int())
	    # and this is to hard to reconcile in the op output
	    :
	else
	    _print_operation
	    _cmp_op_output $seqfull.op $filtered
	fi

	_print_transaction_inode $start
	_cmp_output $seqfull.trans_inode $filtered

	_print_transaction_buf $start
	_cmp_output $seqfull.trans_buf $filtered
    done
done

status=0
exit
