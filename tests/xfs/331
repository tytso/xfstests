#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2016, Oracle and/or its affiliates.  All Rights Reserved.
#
# FS QA Test No. 331
#
# Create a big enough rmapbt that we tickle a fdblocks accounting bug.
#
. ./common/preamble
_begin_fstest auto quick rmap clone

# Import common functions.
. ./common/filter
. ./common/reflink

# real QA test starts here
_supported_fs xfs
_require_scratch
_require_xfs_scratch_rmapbt
_require_scratch_reflink
_require_xfs_io_command "falloc"
_require_test_program "punch-alternating"
_require_xfs_io_command "falloc"

rm -f "$seqres.full"

echo "+ create scratch fs"
_scratch_mkfs > "$seqres.full" 2>&1

echo "+ mount fs image"
_scratch_mount
blksz="$(_get_block_size $SCRATCH_MNT)"

# btree header is 56 bytes; an rmapbt record is 24 bytes; and
# a rmapbt key/pointer pair is 44 bytes.
bt_ptrs=$(( (blksz - 56) / 44 ))
bt_recs=$(( (blksz - 56) / 24 ))

blocks=$((bt_ptrs * bt_recs + 1))
# Need (2 * blocks * blksz) bytes for files, and 20% for metadata
_require_fs_space $SCRATCH_MNT $(( (2 * blocks * blksz) * 5 / 4096 ))
len=$((blocks * blksz))

echo "+ make some files"
$XFS_IO_PROG -f -c "falloc 0 $len" -c "pwrite -S 0x68 -b 1048576 0 $len" $SCRATCH_MNT/f1 >> $seqres.full
$XFS_IO_PROG -f -c "falloc 0 $len" -c "pwrite -S 0x68 -b 1048576 0 $len" $SCRATCH_MNT/f2 >> $seqres.full
$here/src/punch-alternating $SCRATCH_MNT/f1 >> "$seqres.full"
$here/src/punch-alternating $SCRATCH_MNT/f2 >> "$seqres.full"

# success, all done
status=0
exit
