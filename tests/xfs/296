#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2013 Red Hat, Inc.  All Rights Reserved.
#
# FS QA Test No. 296
#
# Test that xfsdump/restore preserves file capabilities
#
. ./common/preamble
_begin_fstest dump auto quick

# Override the default cleanup function.
_cleanup()
{
    _cleanup_dump
    cd /
    rm -f $tmp.*
}

# Import common functions.
. ./common/filter
. ./common/dump

# real QA test starts here

# Modify as appropriate.
_supported_fs xfs
_require_scratch
_require_command "$SETCAP_PROG" setcap
_require_command "$GETCAP_PROG" getcap

_wipe_fs

mkdir -p $dump_dir
echo test > $dump_dir/testfile
# Set a generic xattr
setfattr -n user.name -v value $dump_dir/testfile
# Now set the cap (which is also an xattr)
$SETCAP_PROG cap_setgid,cap_setuid+ep $dump_dir/testfile
# And make sure they are there on the source
echo "Checking for xattr on source file"
getfattr --absolute-names -m user.name $dump_dir/testfile | _dir_filter
echo "Checking for capability on source file"
_getcap $dump_dir/testfile | _dir_filter
getfattr --absolute-names -m security.capability $dump_dir/testfile | _dir_filter

_do_dump_file -f $tmp.df.0
_prepare_restore_dir
_do_restore_file
# Basic dump/restore checks first - the file is there, right?
_ls_compare_sub
_diff_compare

echo "Checking for xattr on restored file"
getfattr --absolute-names -m user.name $restore_dir/$dump_sdir/testfile | _dir_filter
echo "Checking for capability on restored file"
_getcap $restore_dir/$dump_sdir/testfile | _dir_filter
getfattr --absolute-names -m security.capability $restore_dir/$dump_sdir/testfile | _dir_filter

status=0
exit
