#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2015, Oracle and/or its affiliates.  All Rights Reserved.
#
# FS QA Test No. 139
#
# Try to ENOSPC while expanding the refcntbt by CoWing every block
# of a file that eats the whole AG.
#
. ./common/preamble
_begin_fstest auto quick clone

# Override the default cleanup function.
_cleanup()
{
    cd /
    rm -rf $tmp.* $testdir
}

# Import common functions.
. ./common/filter
. ./common/reflink

# real QA test starts here
# Below agsize (16384 * $blksz) is too small for a large fs, and it's not
# necessary to test on large fs
_require_no_large_scratch_dev
_require_scratch_reflink
_require_cp_reflink

_scratch_mkfs >/dev/null 2>&1
_scratch_mount
_xfs_force_bdev data $SCRATCH_MNT
blksz=$(_get_file_block_size $SCRATCH_MNT)
_scratch_unmount

echo "Format and mount"
_scratch_mkfs -d agsize=$((16384 * $blksz)) > $seqres.full 2>&1
_scratch_mount >> $seqres.full 2>&1
_xfs_force_bdev data $SCRATCH_MNT

testdir=$SCRATCH_MNT/test-$seq
mkdir $testdir

echo "Create the original files"
sz=$((20480 * $blksz))
_pwrite_byte 0x61 0 $sz $testdir/file1 >> $seqres.full
_cp_reflink $testdir/file1 $testdir/file2 >> $seqres.full
_scratch_cycle_mount

echo "CoW every other block"
_pwrite_byte 0x62 0 $sz $testdir/file1 >> $seqres.full
_scratch_cycle_mount

echo "Compare files"
od -t x1 $testdir/file1 | _filter_od
od -t x1 $testdir/file2 | _filter_od
#filefrag -v $testdir/file1 $testdir/file2

# success, all done
status=0
exit
