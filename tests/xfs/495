#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2018 Oracle, Inc.  All Rights Reserved.
#
# FS QA Test No. 495
#
# Test for two related regressions -- first, check that repair doesn't
# repeatedly rebuild directories with a single leafn block; and check that
# repair also doesn't crash when it hits a corrupt da btree with a zero before
# pointer.
#
. ./common/preamble
_begin_fstest auto quick repair

_register_cleanup "_cleanup" BUS

# Import common functions.
. ./common/filter
. ./common/populate
. ./common/fuzzy

# real QA test starts here
_supported_fs xfs
_require_scratch_nocheck
_require_populate_commands
_require_xfs_db_command "fuzz"

echo "Format and populate"
_scratch_populate_cached nofill > $seqres.full 2>&1

filter_nbrepair() {
	grep rebuilding | sed -e 's/directory inode [0-9]*/directory inode XXX/g'
}

run_repair() {
	_scratch_xfs_repair > $tmp.repair 2>&1
	cat $tmp.repair >> $seqres.full
	cat $tmp.repair | filter_nbrepair
}

echo "Check leafn rebuilds"
run_repair
run_repair

echo "Fuzz nbtree[0].before to zero"
_scratch_mount
inum=$(stat -c '%i' $SCRATCH_MNT/S_IFDIR.FMT_NODE)
blk_sz=$(_get_block_size $SCRATCH_MNT)
_scratch_unmount
leaf_offset=$(( (2 ** 35) / blk_sz ))
_scratch_xfs_fuzz_metadata_field "nbtree[0].before" "zeroes" "inode ${inum}" \
				 "dblock ${leaf_offset}" >> $seqres.full

echo "Check nbtree[0].before repair"
run_repair
run_repair

# success, all done
echo Done
status=0
exit
