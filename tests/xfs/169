#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2016, Oracle and/or its affiliates.  All Rights Reserved.
#
# FS QA Test No. 169
#
# Ensure that we can create enough distinct reflink entries to force creation
# of a multi-level refcount btree.  Delete and recreate a few times to
# exercise the refcount btree grow/shrink functions.
#
seq=`basename $0`
seqres=$RESULT_DIR/$seq
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1    # failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

_cleanup()
{
    cd /
    umount $SCRATCH_MNT > /dev/null 2>&1
    rm -rf $tmp.*
}

# get standard environment, filters and checks
. ./common/rc
. ./common/filter
. ./common/reflink

# real QA test starts here
_supported_fs xfs
_require_scratch_reflink

rm -f $seqres.full

_scratch_mkfs >/dev/null 2>&1
_scratch_mount

testdir=$SCRATCH_MNT/test-$seq
mkdir $testdir

echo "Create the original file blocks"
blksz="$(_get_file_block_size $testdir)"
nr_blks=$((8 * blksz / 12))

for i in 1 2 x; do
	_pwrite_byte 0x61 0 $((blksz * nr_blks)) $testdir/file1 >> $seqres.full

	echo "$i: Reflink every other block"
	seq 1 2 $((nr_blks - 1)) | while read nr; do
		_reflink_range  $testdir/file1 $((nr * blksz)) \
				$testdir/file2 $((nr * blksz)) $blksz >> $seqres.full
	done
	umount $SCRATCH_MNT
	_check_scratch_fs
	_scratch_mount

	test $i = "x" && break

	echo "$i: Delete both files"
	rm -rf $testdir/file1 $testdir/file2
	umount $SCRATCH_MNT
	_check_scratch_fs
	_scratch_mount
done

# success, all done
status=0
exit
