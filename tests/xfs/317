#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2016, Oracle and/or its affiliates.  All Rights Reserved.
#
# FS QA Test No. 317
#
# Simulate rmap update errors with a file write and a file remove.
#
. ./common/preamble
_begin_fstest auto quick rmap

# Override the default cleanup function.
_cleanup()
{
	cd /
	_scratch_unmount > /dev/null 2>&1
	rm -rf $tmp.*
}

# Import common functions.
. ./common/filter
. ./common/inject

# real QA test starts here
_supported_fs xfs
_require_scratch
_require_xfs_scratch_rmapbt
_require_error_injection
_require_xfs_io_error_injection "rmap_finish_one"

blksz=65536
blks=64
sz=$((blksz * blks))
echo "Format filesystem"
_scratch_mkfs >/dev/null 2>&1
_scratch_mount >> $seqres.full

echo "Create files"
touch $SCRATCH_MNT/file1
_pwrite_byte 0x67 0 $sz $SCRATCH_MNT/file0 >> $seqres.full
sync

echo "Check files"
md5sum $SCRATCH_MNT/file0 | _filter_scratch
md5sum $SCRATCH_MNT/file1 | _filter_scratch

echo "Inject error"
_scratch_inject_error "rmap_finish_one"

echo "Write files"
$XFS_IO_PROG -c "pwrite -W -S 0x67 -b $sz 0 $sz" $SCRATCH_MNT/file1 >> $seqres.full 2>&1

echo "FS should be shut down, touch will fail"
touch $SCRATCH_MNT/badfs 2>&1 | _filter_scratch

echo "Remount to replay log"
_scratch_inject_logprint >> $seqres.full

echo "Check files"
md5sum $SCRATCH_MNT/file0 | _filter_scratch
md5sum $SCRATCH_MNT/file1 | _filter_scratch

echo "FS should be online, touch should succeed"
touch $SCRATCH_MNT/goodfs

echo "Done"

# success, all done
status=0
exit
