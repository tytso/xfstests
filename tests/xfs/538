#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2021 Chandan Babu R.  All Rights Reserved.
#
# FS QA Test 538
#
# Execute fsstress with bmap_alloc_minlen_extent error tag enabled.
#
. ./common/preamble
_begin_fstest auto stress

# Import common functions.
. ./common/filter
. ./common/inject
. ./common/populate

# real QA test starts here

_supported_fs xfs
_require_scratch
_require_xfs_debug
_require_test_program "punch-alternating"
_require_xfs_io_error_injection "bmap_alloc_minlen_extent"

echo "Format and mount fs"
_scratch_mkfs_sized $((1024 * 1024 * 1024)) >> $seqres.full
_scratch_mount >> $seqres.full

# Disable realtime inherit flag (if any) on root directory so that space on data
# device gets fragmented rather than realtime device.
_xfs_force_bdev data $SCRATCH_MNT

bsize=$(_get_file_block_size $SCRATCH_MNT)

echo "Consume free space"
fillerdir=$SCRATCH_MNT/fillerdir
nr_free_blks=$(stat -f -c '%f' $SCRATCH_MNT)
nr_free_blks=$((nr_free_blks * 90 / 100))

_fill_fs $((bsize * nr_free_blks)) $fillerdir $bsize 0 >> $seqres.full 2>&1

echo "Create fragmented filesystem"
for dentry in $(ls -1 $fillerdir/); do
	$here/src/punch-alternating $fillerdir/$dentry >> $seqres.full
done

echo "Inject bmap_alloc_minlen_extent error tag"
_scratch_inject_error bmap_alloc_minlen_extent 1

echo "Scale fsstress args"
args=$(_scale_fsstress_args -p $((LOAD_FACTOR * 75)) -n $((TIME_FACTOR * 1000)))

echo "Execute fsstress in background"
$FSSTRESS_PROG -d $SCRATCH_MNT $args \
		 -f bulkstat=0 \
		 -f bulkstat1=0 \
		 -f fiemap=0 \
		 -f getattr=0 \
		 -f getdents=0 \
		 -f getfattr=0 \
		 -f listfattr=0 \
		 -f mread=0 \
		 -f read=0 \
		 -f readlink=0 \
		 -f readv=0 \
		 -f stat=0 \
		 -f aread=0 \
		 -f dread=0 > /dev/null 2>&1

# success, all done
status=0
exit
