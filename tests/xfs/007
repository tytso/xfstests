#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2014 Red Hat, Inc.  All Rights Reserved.
#
# FS QA Test No. xfs/007
#
# Test to verify Q_XQUOTARM functionality.
#
. ./common/preamble
_begin_fstest auto quota quick

# Import common functions.
. ./common/filter
. ./common/quota

# Modify as appropriate.

_require_scratch
_require_xfs_quota

_scratch_mkfs_xfs | _filter_mkfs > /dev/null 2> $tmp.mkfs
. $tmp.mkfs

get_qfile_nblocks() {
	local selector="$(_scratch_xfs_find_metafile "$1")"
	_scratch_xfs_db -c "$selector" -c "p core.nblocks"
}

do_test()
{
	qino_1=$1
	qino_2=$2
	off_opts=$3

	echo "*** umount"
	_scratch_unmount

	echo "*** Usage before quotarm ***"
	get_qfile_nblocks $qino_1
	get_qfile_nblocks $qino_2

	_qmount
	echo "*** turn off $off_opts quotas"
	$XFS_QUOTA_PROG -x -c "off -$off_opts" $SCRATCH_MNT

	# Remount the filesystem with no quota options to force quotas off.
	# This takes care of newer kernels where quotaoff clears the superblock
	# quota enforcement flags but doesn't shut down accounting.
	_scratch_unmount
	_qmount_option ""
	_scratch_mount

	rm_commands=(-x -c "remove -$off_opts")

	# Remounting a V4 fs with no quota options means that the internal
	# gquotino -> pquotino remapping does not happen.  If we want to
	# truncate the "project" quota file we must run remove -g.  However,
	# xfs_quota has a nasty sharp edge wherein passing '-g' and '-p' only
	# results in a QUOTARM call for the group quota file, so we must make
	# a separate remove call.
	[ $_fs_has_crcs == 0 ] && [ "$off_opts" = "up" ] && \
		rm_commands+=(-c "remove -g")

	$XFS_QUOTA_PROG "${rm_commands[@]}" $SCRATCH_MNT

	echo "*** umount"
	_scratch_unmount

	echo "*** Usage after quotarm ***"
	get_qfile_nblocks $qino_1
	get_qfile_nblocks $qino_2
}

# Test user and group first
_qmount_option "uquota,gquota"
_qmount
do_test uquotino gquotino ug

# Test user and project. Note that pquotino only exists on v5 (crc=1)
# superblocks. Older supers reuse gquotino.
PQUOTINO=pquotino
if [ $_fs_has_crcs == 0 ]; then
	PQUOTINO=gquotino
fi
_qmount_option "uquota,pquota"
_qmount
_require_prjquota $SCRATCH_DEV
do_test uquotino $PQUOTINO up

# success, all done
status=0
exit
