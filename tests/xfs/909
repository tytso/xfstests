#! /bin/bash
# SPDX-License-Identifier: GPL-2.0-or-later
# Copyright (c) 2020, Oracle and/or its affiliates.  All Rights Reserved.
#
# FS QA Test No. 909
#
# Check that we can upgrade a filesystem to support bigtime and that quota
# timers work properly after the upgrade.

seq=`basename $0`
seqres=$RESULT_DIR/$seq
echo "QA output created by $seq"

here=`pwd`
tmp=/tmp/$$
status=1    # failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

_cleanup()
{
	cd /
	rm -f $tmp.*
}

# get standard environment, filters and checks
. ./common/rc
. ./common/filter
. ./common/quota

# real QA test starts here
_supported_fs xfs
_supported_os Linux
_require_quota
_require_xfs_mkfs_crc
_require_xfs_mkfs_bigtime
_require_xfs_scratch_bigtime

date --date='Jan 1 00:00:00 UTC 2040' > /dev/null 2>&1 || \
	_notrun "Userspace does not support dates past 2038."

rm -f $seqres.full

# Format V5 filesystem without bigtime support and populate it
_scratch_mkfs -m crc=1,bigtime=0 > $seqres.full
_qmount_option "usrquota"
_scratch_xfs_db -c 'version' -c 'sb 0' -c 'p' >> $seqres.full
_scratch_mount >> $seqres.full

touch $SCRATCH_MNT/a
touch $SCRATCH_MNT/b
$XFS_QUOTA_PROG -x -c 'timer -u 300m' $SCRATCH_MNT
$XFS_QUOTA_PROG -x -c 'state' $SCRATCH_MNT | grep 'grace time'

_scratch_unmount

# Now upgrade to bigtime support
_scratch_xfs_admin -O bigtime >> $seqres.full
_check_scratch_fs
_scratch_xfs_db -c 'version' -c 'sb 0' -c 'p' >> $seqres.full

# Mount again, see if our quota timer survived
_scratch_mount
$XFS_QUOTA_PROG -x -c 'state' $SCRATCH_MNT | grep 'grace time'

# Create a file to force the dirty dquot out to disk
touch -d 'Feb 22 22:22:22 UTC 2222' $SCRATCH_MNT/b

_scratch_cycle_mount

# Did the timer (and the timestamp) survive?
TZ=UTC stat -c '%Y' $SCRATCH_MNT/b
$XFS_QUOTA_PROG -x -c 'state' $SCRATCH_MNT | grep 'grace time'

# success, all done
echo Silence is golden.
status=0
exit
