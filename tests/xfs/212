#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2016, Oracle and/or its affiliates.  All Rights Reserved.
#
# FS QA Test No. 212
#
# Test recovery of "lost" CoW blocks after a crash:
# - Create two reflinked files.  Set extsz hint on second file.
# - Dirty one byte on the second file and fsync.
# - Crash the FS to test recovery.
#
. ./common/preamble
_begin_fstest shutdown auto quick clone

# Import common functions.
. ./common/filter
. ./common/reflink

# real QA test starts here
_supported_fs xfs
_require_scratch_reflink
_require_cp_reflink
_require_xfs_io_command "fiemap"

echo "Format and mount"
_scratch_mkfs > $seqres.full 2>&1
_scratch_mount >> $seqres.full 2>&1

testdir=$SCRATCH_MNT/test-$seq
mkdir $testdir

blksz=65536
_require_congruent_file_oplen $SCRATCH_MNT $blksz
nr=16
filesize=$((blksz * nr))
bufnr=2
bufsize=$((blksz * bufnr))

_require_fs_space $SCRATCH_MNT $((filesize / 1024 * 3 * 5 / 4))

echo "Create the original files"
$XFS_IO_PROG -f -c "pwrite -S 0x61 -b $bufsize 0 $filesize" $testdir/file1 >> $seqres.full
$XFS_IO_PROG -f -c "pwrite -S 0x61 -b $bufsize 0 $filesize" $testdir/file2.chk >> $seqres.full
$XFS_IO_PROG -f -c "extsize $bufsize" $testdir/file2
_cp_reflink $testdir/file1 $testdir/file2 >> $seqres.full
_scratch_cycle_mount

echo "Compare files"
md5sum $testdir/file1 | _filter_scratch
md5sum $testdir/file2 | _filter_scratch
md5sum $testdir/file2.chk | _filter_scratch

echo "CoW and leave leftovers"
$XFS_IO_PROG -f -c "extsize" $testdir/file2 >> $seqres.full
$XFS_IO_PROG -f -c "pwrite -S 0x63 $((filesize - 1)) 1" -c "fsync" $testdir/file2 >> $seqres.full
$XFS_IO_PROG -f -c "pwrite -S 0x63 $((filesize - 1)) 1" -c "fsync" $testdir/file2.chk >> $seqres.full
sync

echo "Crash and recover"
$XFS_IO_PROG -x -c "shutdown" $testdir/file2 >> $seqres.full
_scratch_cycle_mount

echo "Compare files"
md5sum $testdir/file1 | _filter_scratch
md5sum $testdir/file2 | _filter_scratch
md5sum $testdir/file2.chk | _filter_scratch

# success, all done
status=0
exit
