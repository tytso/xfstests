#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2016, Oracle and/or its affiliates.  All Rights Reserved.
#
# FS QA Test No. 338
#
# Set rrmapino to zero on an rtrmap fs and see if repair fixes it.
#
. ./common/test_names
_set_seq_and_groups auto quick rmap realtime
seqres="$RESULT_DIR/$seq"

trap "_cleanup; exit \$status" 0 1 2 3 15

_cleanup()
{
	cd /
	rm -rf "$tmp".*
}

# get standard environment, filters and checks
. ./common/rc
. ./common/filter

# real QA test starts here
_supported_fs xfs
_require_realtime
_require_xfs_scratch_rmapbt

rm -f "$seqres.full"

echo "Format and mount"
_scratch_mkfs > "$seqres.full" 2>&1
_scratch_mount

echo "Create some files"
$XFS_IO_PROG -f -R -c "pwrite -S 0x68 0 9999" $SCRATCH_MNT/f1 >> $seqres.full
$XFS_IO_PROG -f -R -c "pwrite -S 0x68 0 9999" $SCRATCH_MNT/f2 >> $seqres.full
_scratch_unmount

echo "Corrupt fs"
rtrmap_sfentry="$(_scratch_find_rt_metadir_entry 0.rmap)"
test -n "$rtrmap_sfentry" || _fail "Could not find rtrmap metadir entry?"
_scratch_xfs_db -x -c 'path -m /realtime/0.rmap' \
	-c 'write core.nlinkv2 0' -c 'write core.mode 0' \
	-c 'path -m /realtime' \
	-c "write $rtrmap_sfentry 0" >> $seqres.full
if _try_scratch_mount >> $seqres.full 2>&1; then
       echo "mount should have failed"
       _scratch_unmount
else
	# If the verifiers are working properly, the mount will fail because
	# we fuzzed the metadata root directory.  This causes loud complaints
	# to dmesg, so we want to ignore those.
	_disable_dmesg_check
fi

echo "Repair fs"
_scratch_unmount 2>&1 | _filter_scratch | _filter_ending_dot
_repair_scratch_fs >> $seqres.full 2>&1

echo "Try to create more files (again)"
_scratch_mount
$XFS_IO_PROG -f -R -c "pwrite -S 0x68 0 9999" $SCRATCH_MNT/f4 >> $seqres.full

# success, all done
status=0
exit
