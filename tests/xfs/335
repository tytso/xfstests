#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2016, Oracle and/or its affiliates.  All Rights Reserved.
#
# FS QA Test No. 335
#
# Exercise expanding and shrinking the realtime rmap btree.
#
. ./common/preamble
_begin_fstest auto rmap realtime

# Import common functions.
. ./common/filter

# real QA test starts here
_supported_fs xfs
_require_realtime
_require_xfs_scratch_rmapbt
_require_test_program "punch-alternating"
_require_xfs_io_command "falloc"

rm -f "$seqres.full"

echo "Format and mount"
_scratch_mkfs | _filter_mkfs 2>$tmp.mkfs >/dev/null
. $tmp.mkfs
cat $tmp.mkfs > "$seqres.full" 2>&1
_scratch_mount
blksz="$(_get_block_size $SCRATCH_MNT)"

echo "Create a three-level rtrmapbt"
# inode core size is at least 176 bytes; btree header is 56 bytes;
# rtrmap record is 32 bytes; and rtrmap key/pointer are 56 bytes.
i_ptrs=$(( (isize - 176) / 56 ))
bt_ptrs=$(( (blksz - 56) / 56 ))
bt_recs=$(( (blksz - 56) / 32 ))

blocks=$((i_ptrs * bt_ptrs * bt_recs))
# Need (2 * blocks * blksz) bytes for files, and 20% more for metadata
_require_fs_space $SCRATCH_MNT $(( (2 * blocks * blksz) * 5 / 4096 ))
len=$((blocks * rtextsz))

echo "Create big file"
$XFS_IO_PROG -f -R -c "falloc 0 $len" -c "pwrite -S 0x68 -b 1048576 0 $len" $SCRATCH_MNT/f1 >> $seqres.full
$XFS_IO_PROG -f -R -c "falloc 0 $len" -c "pwrite -S 0x68 -b 1048576 0 $len" $SCRATCH_MNT/f2 >> $seqres.full

echo "Explode the rtrmapbt"
$here/src/punch-alternating $SCRATCH_MNT/f1 >> "$seqres.full"
$here/src/punch-alternating $SCRATCH_MNT/f2 >> "$seqres.full"
_scratch_cycle_mount

echo "Remove half the records"
rm -rf $SCRATCH_MNT/f1
_scratch_cycle_mount

echo "Remove the rest of the records"
rm -rf $SCRATCH_MNT/f2

# success, all done
status=0
exit
