#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2015, Oracle and/or its affiliates.  All Rights Reserved.
#
# FS QA Test No. 140
#
# Try to ENOSPC while expanding the refcntbt by CoWing every other block
# of a file that eats the whole AG.
#
. ./common/preamble
_begin_fstest auto clone

# Override the default cleanup function.
_cleanup()
{
    cd /
    rm -rf $tmp.* $testdir
}

# Import common functions.
. ./common/filter
. ./common/reflink

# real QA test starts here
# Below agsize is too small for a large fs, and it's not necessary to test on
# large fs
_require_no_large_scratch_dev
_require_scratch_reflink
_require_cp_reflink

_scratch_mkfs >/dev/null 2>&1
_scratch_mount
blksz=$(_get_file_block_size $SCRATCH_MNT)
_scratch_unmount

agsize=$((8192 * $blksz))
if [[ $agsize -lt $((16 * 1024 * 1024)) ]]; then
	agsize=$((16 * 1024 * 1024))
fi
sz=$((4096 * $blksz + $agsize))
nr=$(($sz / $blksz))

echo "Format and mount"
_scratch_mkfs -d agsize=$agsize > $seqres.full 2>&1
_scratch_mount >> $seqres.full 2>&1

testdir=$SCRATCH_MNT/test-$seq
mkdir $testdir

echo "Create the original files"
_pwrite_byte 0x61 0 $sz $testdir/file1 >> $seqres.full
_cp_reflink $testdir/file1 $testdir/file2 >> $seqres.full
_pwrite_byte 0x61 0 $sz $testdir/file2.chk >> $seqres.full
_scratch_cycle_mount

echo "Compare files"
cmp -s $testdir/file1 $testdir/file2 || echo "file1 and file2 do not match"
cmp -s $testdir/file2 $testdir/file2.chk || echo "file2 and file2.chk do not match"

echo "CoW every other block"
seq 1 2 $((nr - 1)) | while read f; do
	_pwrite_byte 0x62 $((f * blksz)) $blksz $testdir/file2 >> $seqres.full
	_pwrite_byte 0x62 $((f * blksz)) $blksz $testdir/file2.chk >> $seqres.full
done
_scratch_cycle_mount

echo "Compare files"
! cmp -s $testdir/file1 $testdir/file2 || echo "file1 and file2 must not match"
cmp -s $testdir/file2 $testdir/file2.chk || echo "file2 and file2.chk do not match"

# success, all done
status=0
exit
