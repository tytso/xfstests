#! /bin/bash
# SPDX-License-Identifier: GPL-2.0

#
# FSQA Test No. 303
#
# Ext4 defragmentation stress test
# Two defrag tasks use common donor file
#
. ./common/preamble
_begin_fstest aio auto ioctl rw stress defrag

fio_config=$tmp.fio

# Import common functions.
. ./common/filter
. ./common/defrag

# real QA test starts here
_supported_fs ext4
_require_scratch
_require_defrag
_require_odirect

BLK_DEV_SIZE=`blockdev --getsz $SCRATCH_DEV`
# We need space for 3 files (one donor file and two test files)
# Reserve space for 4 files in order to avoid ENOSPC
FILE_SIZE=$((BLK_DEV_SIZE * (512 / (3+1))))

cat >$fio_config <<EOF
# Common e4defrag regression tests
[global]
ioengine=ioe_e4defrag
iodepth=1
directory=${SCRATCH_MNT}
filesize=${FILE_SIZE}
size=999G
buffered=0
fadvise_hint=0
continue_on_error=write
ignore_error=,EBUSY

#################################
# Test3
# Two defrag tasks use common donor file
[defrag-1]
ioengine=e4defrag
iodepth=1
bs=128k
donorname=test3.def
filename=test31
inplace=0
rw=write
numjobs=${LOAD_FACTOR}
runtime=30*${TIME_FACTOR}
time_based

[defrag-2]
ioengine=e4defrag
iodepth=1
bs=128k
donorname=test3.def
filename=test32
inplace=0
rw=write
numjobs=${LOAD_FACTOR}
runtime=30*${TIME_FACTOR}
time_based

[aio-dio-verifier-1]
ioengine=libaio
iodepth=128*${LOAD_FACTOR}
numjobs=1
verify=crc32c-intel
verify_fatal=1
verify_dump=1
verify_backlog=1024
verify_async=1
verifysort=1
direct=1
bs=64k
rw=write
filename=test31
runtime=30*${TIME_FACTOR}
time_based

[aio-buffer-verifier-2]
ioengine=libaio
numjobs=1
verify=crc32c-intel
verify_fatal=1
verify_dump=1
verify_backlog=1024
verify_async=1
verifysort=1
buffered=1
bs=64k
rw=randrw
filename=test32
runtime=30*${TIME_FACTOR}
time_based

EOF

_workout()
{
	echo ""
	echo " Start defragment activity"
	echo ""
	cat $fio_config >>  $seqres.full
	run_check $FIO_PROG $fio_config
}

_require_fio $fio_config

_scratch_mkfs  >> $seqres.full 2>&1
_scratch_mount

if ! _workout; then
	_scratch_unmount 2>/dev/null
	exit
fi

if ! _scratch_unmount; then
	echo "failed to umount"
	status=1
	exit
fi
status=0
exit
