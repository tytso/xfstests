#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2007 Silicon Graphics, Inc.  All Rights Reserved.
#
# FSQA Test No. 169
#
# Test for file size consistency with append followed by umount/mount
#
. ./common/preamble
_begin_fstest rw metadata auto quick

_show_wrote_and_stat_only()
{
	# filer out xfs_io bits we are interested in
	perl -ne '
		if (/^wrote/) { print } ;
		if (/^stat\.size/) { print } ;
	'
}

# Import common functions.
. ./common/filter

# real QA test starts here
_supported_fs generic

_require_scratch

_scratch_mkfs >>$seqres.full 2>&1 \
	|| _fail "mkfs scratch failed"

_scratch_mount

echo "# creating new file for io"
touch $SCRATCH_MNT/testfile

echo "# appending 15k to new file, sync every 5k"
$XFS_IO_PROG -a -c "pwrite 0 5k" -c "fsync" \
	-c "pwrite 5k 5k" -c "fsync" \
	-c "pwrite 10k 5k" -c "fsync" -c "stat" \
	$SCRATCH_MNT/testfile \
	| _show_wrote_and_stat_only

echo "# remounting scratch"
_scratch_cycle_mount >>$seqres.full 2>&1 \
    || _fail "remount failed: $MOUNT_OPTIONS"

echo "# stating file to confirm correct size"
$XFS_IO_PROG -r -c "stat" $SCRATCH_MNT/testfile \
	| _show_wrote_and_stat_only

echo "# appending 10 bytes to new file, sync at 5 bytes"
$XFS_IO_PROG -f -c "pwrite 0 5" -c s -c "pwrite 5 5" \
	-c "stat" $SCRATCH_MNT/nextfile \
	| _show_wrote_and_stat_only

echo "# remounting scratch"
_scratch_cycle_mount >>$seqres.full 2>&1 \
    || _fail "remount failed: $MOUNT_OPTIONS"

echo "# stating file to confirm correct size"
$XFS_IO_PROG -r -c "stat" $SCRATCH_MNT/nextfile \
    | _show_wrote_and_stat_only

# success, all done
status=0
exit

