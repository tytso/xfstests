#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2006 Silicon Graphics, Inc.  All Rights Reserved.
#
# FSQA Test No. 233
#
# Run fsstress with quotas enabled and limits set low and verify accounted
# quotas in the end
#
# Derived from test 231
. ./common/preamble
_begin_fstest auto quota stress

# Import common functions.
. ./common/filter
. ./common/quota

_filter_num()
{
	tee -a $seqres.full |\
	sed -e 's/[0-9][0-9]* inodes/I inodes/g' \
	    -e 's/[0-9][0-9]* paths/P paths/g' \
	    -e 's/seed = [0-9][0-9]*/seed = S/'
}

_fsstress()
{
	echo ""
	echo "Testing fsstress"
	echo ""

	out=$SCRATCH_MNT/fsstress.$$
	count=5000
	args=`_scale_fsstress_args -z \
-f rmdir=20 -f link=10 -f creat=10 -f mkdir=10 -f unlink=20 -f symlink=10 \
-f rename=10 -f fsync=2 -f write=15 -f dwrite=15 \
-n $count -d $out -p 7`

	# io_uring accounts memory it needs under the rlimit memlocked option,
	# which can be quite low on some setups (especially 64K pagesize). root
	# isn't under this restriction, but regular users are. To avoid the
	# io_uring_queue_init fail on ENOMEM, set max locked memory to unlimited
	# temporarily.
	ulimit -l unlimited
	echo "fsstress $args" >> $seqres.full
	if ! su $qa_user -c "$FSSTRESS_PROG $args" | tee -a $seqres.full | _filter_num
	then
		echo "    fsstress $args returned $?"
		cat $tmp.out | tee -a $seqres.full
		status=1
	fi
}

# real QA test starts here
_supported_fs generic
_require_scratch
_require_quota
_require_user

_scratch_mkfs > $seqres.full 2>&1
_scratch_mount "-o usrquota,grpquota"
chmod 777 $SCRATCH_MNT
quotacheck -u -g $SCRATCH_MNT 2>/dev/null
quotaon -u -g $SCRATCH_MNT 2>/dev/null
setquota -u $qa_user 32000 32000 1000 1000 $SCRATCH_MNT 2>/dev/null

_fsstress
_check_quota_usage
_scratch_unmount
status=0
exit
