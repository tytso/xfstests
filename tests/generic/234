#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2010 Jan Kara.  All Rights Reserved.
# Copyright (c) 2005 Silicon Graphics, Inc.  All Rights Reserved.
#
# FS QA Test No. 234
#
# Stress setquota and setinfo handling.
#
. ./common/preamble
_begin_fstest auto quota

# Import common functions.
. ./common/filter
. ./common/quota

test_setting()
{
	echo; echo "### test limits and info setting"
	count=2000
	procs=5
	idmod=200000
	seed=$RANDOM
	RANDOM=$seed
	echo "Starting test with procs=$procs, idmod=$idmod, and seed=$seed" >>$seqres.full

	for (( i = 0; i < $procs; i++ )); do
		( SETUCOUNT=1; SETGCOUNT=1; SETUIDS[0]=0; SETGIDS[0]=0
		for (( j = 0; j < $count; j++ )); do
			OP=$(($RANDOM%22))
			UG=$(($OP%2))
			OP=$(($OP/2))
			if [ $UG -eq 1 ]; then
				type='u'
			else
				type='g'
			fi
			if [ $OP -eq 10 ]; then
				setquota -t -$type $j $j $SCRATCH_MNT
			elif [ $OP -lt 5 ]; then
				ID=$((($RANDOM*32768+$RANDOM)%$idmod))
				if [ $UG -eq 1 ]; then
					SETUIDS[$SETUCOUNT]=$ID
					SETUCOUNT=$(($SETUCOUNT+1))
				else
					SETGIDS[$SETGCOUNT]=$ID
					SETGCOUNT=$(($SETGCOUNT+1))
				fi
				setquota -$type $ID $j $j $j $j $SCRATCH_MNT
			else
				if [ $UG -eq 1 ]; then
					ID=${SETUIDS[$(($RANDOM%$SETUCOUNT))]}
				else
					ID=${SETGIDS[$(($RANDOM%$SETGCOUNT))]}
				fi
				setquota -$type $ID 0 0 0 0 $SCRATCH_MNT
			fi
		done )&
	done
	wait
	echo "### done with testing"
}

# real QA test starts here
_supported_fs generic
_require_scratch
_require_quota

# real QA test starts here

_scratch_mkfs >> $seqres.full 2>&1
_scratch_mount "-o usrquota,grpquota"
quotacheck -u -g $SCRATCH_MNT 2>/dev/null
quotaon -u -g $SCRATCH_MNT 2>/dev/null
test_setting
_scratch_unmount

status=0
exit
