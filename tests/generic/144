#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2015, Oracle and/or its affiliates.  All Rights Reserved.
#
# FS QA Test No. 144
#
# Ensure that fallocate steps around reflinked ranges:
#   - Reflink parts of two files together
#   - Fallocate all the other sparse space.
#   - Check that the reflinked areas are still there.
#
. ./common/preamble
_begin_fstest auto quick clone

# Override the default cleanup function.
_cleanup()
{
    cd /
    rm -rf $tmp.* $testdir
}

# Import common functions.
. ./common/filter
. ./common/reflink

# real QA test starts here
_require_test_reflink
_require_cp_reflink
_require_xfs_io_command "falloc"
_require_xfs_io_command "truncate"

testdir=$TEST_DIR/test-$seq
rm -rf $testdir
mkdir $testdir

echo "Create the original files"
blksz=65536
_require_congruent_file_oplen $TEST_DIR $blksz
_pwrite_byte 0x61 0 $((blksz * 5 + 37)) $testdir/file1 >> $seqres.full

_reflink_range $testdir/file1 $blksz $testdir/file2 $blksz \
		$((blksz * 4 + 37)) >> $seqres.full

$XFS_IO_PROG -f -c "truncate $((blksz * 5 + 37))" $testdir/file3 >> $seqres.full
_reflink_range $testdir/file1 0 $testdir/file3 0 $blksz >> $seqres.full

$XFS_IO_PROG -f -c "truncate $((blksz * 5 + 37))" $testdir/file4 >> $seqres.full
_reflink_range $testdir/file1 $blksz $testdir/file4 $blksz $blksz >> $seqres.full
_reflink_range $testdir/file1 $((blksz * 3)) $testdir/file4 $((blksz * 3)) \
		$blksz >> $seqres.full

_cp_reflink $testdir/file1 $testdir/file5
_test_cycle_mount

echo "Compare sections"
md5sum $testdir/file1 | _filter_test_dir
md5sum $testdir/file2 | _filter_test_dir
md5sum $testdir/file3 | _filter_test_dir
md5sum $testdir/file4 | _filter_test_dir
md5sum $testdir/file5 | _filter_test_dir

_compare_range $testdir/file1 $blksz $testdir/file2 $blksz \
		$((blksz * 4 + 37)) \
	|| echo "shared parts of files 1-2 changed"

_compare_range $testdir/file1 0 $testdir/file3 0 $blksz \
	|| echo "shared parts of files 1-3 changed"

_compare_range $testdir/file1 $blksz $testdir/file4 $blksz $blksz \
	|| echo "shared parts of files 1-4 changed"

_compare_range $testdir/file1 0 $testdir/file5 0 $((blksz * 5 + 37)) \
	|| echo "shared parts of files 1-5 changed"

echo "Compare files"
c1=$(_md5_checksum $testdir/file1)
c2=$(_md5_checksum $testdir/file2)
c3=$(_md5_checksum $testdir/file3)
c4=$(_md5_checksum $testdir/file4)
c5=$(_md5_checksum $testdir/file5)

test ${c1} != ${c2} || echo "file1 and file2 should not match"
test ${c1} != ${c3} || echo "file1 and file3 should not match"
test ${c1} != ${c4} || echo "file1 and file4 should not match"
test ${c1}  = ${c5} || echo "file1 and file5 should match"
test ${c2} != ${c3} || echo "file2 and file3 should not match"
test ${c2} != ${c4} || echo "file2 and file4 should not match"
test ${c2} != ${c5} || echo "file2 and file5 should not match"
test ${c3} != ${c4} || echo "file3 and file4 should not match"
test ${c3} != ${c5} || echo "file3 and file5 should not match"
test ${c4} != ${c5} || echo "file4 and file5 should not match"

echo "falloc everything"
$XFS_IO_PROG -f -c "falloc 0 $((blksz * 5))" $testdir/file2 >> $seqres.full
$XFS_IO_PROG -f -c "falloc 0 $((blksz * 5))" $testdir/file3 >> $seqres.full
$XFS_IO_PROG -f -c "falloc 0 $((blksz * 5))" $testdir/file4 >> $seqres.full
_test_cycle_mount

echo "Compare files"
md5sum $testdir/file1 | _filter_test_dir
md5sum $testdir/file2 | _filter_test_dir
md5sum $testdir/file3 | _filter_test_dir
md5sum $testdir/file4 | _filter_test_dir
md5sum $testdir/file5 | _filter_test_dir

d1=$(_md5_checksum $testdir/file1)
d2=$(_md5_checksum $testdir/file2)
d3=$(_md5_checksum $testdir/file3)
d4=$(_md5_checksum $testdir/file4)
d5=$(_md5_checksum $testdir/file5)

test ${c1} = ${d1} || echo "file1 should not change"
test ${c2} = ${d2} || echo "file2 should not change"
test ${c3} = ${d3} || echo "file3 should not change"
test ${c4} = ${d4} || echo "file4 should not change"
test ${c5} = ${d5} || echo "file2 should not change"

# success, all done
status=0
exit
