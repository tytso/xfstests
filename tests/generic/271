#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2016, Oracle and/or its affiliates.  All Rights Reserved.
#
# FS QA Test No. 271
#
# Test DIO CoW behavior when the write temporarily fails.
#
. ./common/preamble
_begin_fstest auto quick clone eio

# Override the default cleanup function.
_cleanup()
{
    cd /
    rm -rf $tmp.*
    _dmerror_cleanup
}

# Import common functions.
. ./common/filter
. ./common/reflink
. ./common/dmerror

# real QA test starts here
_require_scratch_reflink
_require_cp_reflink
_require_dm_target error
_require_odirect

echo "Format and mount"
_scratch_mkfs > $seqres.full 2>&1
_dmerror_init
_dmerror_mount >> $seqres.full 2>&1

testdir=$SCRATCH_MNT/test-$seq
mkdir $testdir

blksz=65536
nr=640
bufnr=128
filesize=$((blksz * nr))
bufsize=$((blksz * bufnr))

_require_fs_space $SCRATCH_MNT $((filesize / 1024 * 3 * 5 / 4))

echo "Create the original files"
$XFS_IO_PROG -f -c "pwrite -S 0x61 -b $bufsize 0 $filesize" $testdir/file1 >> $seqres.full
_cp_reflink $testdir/file1 $testdir/file2 >> $seqres.full
_dmerror_unmount
_dmerror_mount

echo "Compare files"
md5sum $testdir/file1 | _filter_scratch
md5sum $testdir/file2 | _filter_scratch

echo "CoW and unmount"
sync
_dmerror_load_error_table
urk=$($XFS_IO_PROG -d -f -c "pwrite -S 0x63 -b $bufsize 0 $filesize" $testdir/file2 2>&1)
echo $urk >> $seqres.full
echo "$urk" | grep -q "error" || _fail "dio pwrite did not fail"
_dmerror_load_working_table
_dmerror_unmount
_dmerror_mount

echo "Compare files"
md5sum $testdir/file1 | _filter_scratch

echo "Check for damage"
_dmerror_unmount
_dmerror_cleanup
_repair_scratch_fs >> $seqres.full

# success, all done
status=0
exit
