#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2000-2006 Silicon Graphics, Inc.  All Rights Reserved.
#
# FS QA Test No. 105
#
# Test fix of bug:
#   930290 - xfs directory with no exec perm in ACL denies access
#            and breaks CAPP evaluation
#   which pulls out an earlier mod
#
. ./common/preamble
_begin_fstest acl auto quick

# Override the default cleanup function.
_cleanup()
{
    cd /
}

# Import common functions.
. ./common/filter
. ./common/attr

# Modify as appropriate.
_supported_fs generic

# real QA test starts here

_require_scratch
_require_acls

_acl_setup_ids

_scratch_unmount >/dev/null 2>&1
echo "*** MKFS ***"                         >>$seqres.full
echo ""                                     >>$seqres.full
_scratch_mkfs                               >>$seqres.full 2>&1 \
	|| _fail "mkfs failed"
_try_scratch_mount                      >>$seqres.full 2>&1 \
	|| _fail "mount failed"

cd $SCRATCH_MNT

# create a dir with out execute perms
mkdir -m 600 subdir

# make it owned by $acl1
chown $acl1 subdir

# put a file in the directory
echo data > subdir/file
_ls_l subdir/file | awk '{ print $1, $3 }'

# add an ACL with a user ACE which has no exec permission 
setfacl -m u:$acl1:r subdir

# With the bug this gives: `ls: subdir/file: Permission denied'
# because one needs at least an exec perm somewhere in acl
# However, this should not hold true for directories.
_ls_l subdir/file | awk '{ print $1, $3 }'

# With the bug this gives: `subdir/file2: Permission denied'.
echo data2 > subdir/file2

# success, all done
status=0
exit
