#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
#
# FS QA Test No. 670
#
# Test for races or FS corruption between reflink and mmap reading the
# target file. (MMAP version of generic/164,165)
#
. ./common/preamble
_begin_fstest auto clone

_register_cleanup "_cleanup" BUS

# Import common functions.
. ./common/filter
. ./common/reflink

# real QA test starts here
_require_scratch_reflink
_require_cp_reflink

echo "Format and mount"
_scratch_mkfs > $seqres.full 2>&1
_scratch_mount >> $seqres.full 2>&1

testdir=$SCRATCH_MNT/test-$seq
finished_file=/tmp/finished
rm -rf $finished_file
mkdir $testdir

loops=512
nr_loops=$((loops - 1))
blksz=65536
_require_congruent_file_oplen $SCRATCH_MNT $blksz

echo "Initialize files"
echo >> $seqres.full
_pwrite_byte 0x61 0 $((loops * blksz)) $testdir/file1 >> $seqres.full
_pwrite_byte 0x62 0 $((loops * blksz)) $testdir/file2 >> $seqres.full
_cp_reflink $testdir/file1 $testdir/file3
_scratch_cycle_mount

fbytes() {
	# Different with generic/164,165, mread copies data from mmapped area
	# one-byte-at-a-time, which may cause races during reflink_range().
	# So the result of _mread_range() may be a mix of 61 and 62.
	grep -E -v '((61|62) ){15}(61|62)'
}

reader() {
	while [ ! -e $finished_file ]; do
		_mread_range $testdir/file3 0 $((loops * blksz)) | fbytes
	done
}

echo "Reflink and mmap reread the files!"
reader &
for i in `seq 1 2`; do
	seq $nr_loops -1 0 | while read i; do
		_reflink_range  $testdir/file1 $((i * blksz)) \
				$testdir/file3 $((i * blksz)) $blksz >> $seqres.full
		[ $? -ne 0 ] && break
	done
	seq $nr_loops -1 0 | while read i; do
		_reflink_range  $testdir/file2 $((i * blksz)) \
				$testdir/file3 $((i * blksz)) $blksz >> $seqres.full
		[ $? -ne 0 ] && break
	done
done
echo "Finished reflinking"
touch $finished_file
wait

# success, all done
status=0
exit
