#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2006 Silicon Graphics, Inc.  All Rights Reserved.
#
# FSQA Test No. 048
#
# Test for NULL files problem
# test inode size is on disk after sync
#
. ./common/preamble
_begin_fstest shutdown metadata rw auto

# Import common functions.
. ./common/filter

# real QA test starts here
_supported_fs generic

_require_scratch
_require_scratch_shutdown
_require_xfs_io_command "fiemap"
_scratch_mkfs >/dev/null 2>&1
_require_metadata_journaling $SCRATCH_DEV
_scratch_mount

# Do we have enough space on disk?  10G
_require_fs_space $SCRATCH_MNT 10485760

_check_files()
{
	# check file size and contents
	i=1;
	while [ $i -lt 1000 ]
	do
		file=$SCRATCH_MNT/$i
		# if file is missing then sync failed
		if [ -e $file ]
		then
			# if file size is not 10MB then sync failed
			if [ `ls -l $file | tr -s ' ' | cut -d ' ' -f 5` -eq 10485760 ]
			then
				# if file has non-zero size but no extents then it's contents will be NULLs, bad.
				num_extents=`_count_extents $file`
				if [ $num_extents -eq 0 ]; then
					echo corrupt file $file - non-zero size but no extents
				else
					rm -f $file
				fi
			else
				echo file $file has incorrect size - sync failed
			fi
		else
			echo file $file missing - sync failed
		fi
		let i=$i+1
	done
}

# create files and sync them
i=1;
while [ $i -lt 1000 ]
do
	file=$SCRATCH_MNT/$i
	$XFS_IO_PROG -f -c "pwrite -b 64k -S 0xff 0 10m" $file > /dev/null
	if [ $? -ne 0 ]
	then
		echo error creating/writing file $file
		exit
	fi
	let i=$i+1
done

# sync, then shutdown immediately after, then remount and test
sync
_scratch_shutdown
_scratch_unmount
_scratch_mount
_scratch_unmount
if [ ! _check_scratch_fs ]
then
	echo error detected in filesystem
	exit
fi
_scratch_mount
_check_files

status=0
exit
