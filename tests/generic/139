#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2015, Oracle and/or its affiliates.  All Rights Reserved.
#
# FS QA Test No. 139
#
# Ensuring that copy on write in direct-io mode works:
#   - Reflink two files together
#   - Write to the beginning, middle, and end in direct-io mode
#   - Check that the files are now different where we say they're different.
#
. ./common/preamble
_begin_fstest auto quick clone

# Override the default cleanup function.
_cleanup()
{
    cd /
    rm -rf $tmp.* $testdir
}

# Import common functions.
. ./common/filter
. ./common/reflink

# real QA test starts here
_require_test_reflink
_require_cp_reflink
_require_odirect

testdir=$TEST_DIR/test-$seq
rm -rf $testdir
mkdir $testdir

echo "Create the original files"
blksz=65536
_pwrite_byte 0x61 0 $((blksz * 48 - 3)) $testdir/file1 >> $seqres.full
_cp_reflink $testdir/file1 $testdir/file2 >> $seqres.full
_pwrite_byte 0x61 0 $((blksz * 48 - 3)) $testdir/file3 >> $seqres.full
_test_cycle_mount

echo "Compare files"
md5sum $testdir/file1 | _filter_test_dir
md5sum $testdir/file2 | _filter_test_dir
md5sum $testdir/file3 | _filter_test_dir

cmp -s $testdir/file1 $testdir/file2 || echo "Files 1-2 should match"
cmp -s $testdir/file1 $testdir/file3 || echo "Files 1-3 should match"
cmp -s $testdir/file2 $testdir/file3 || echo "Files 2-3 should match"

echo "directio CoW the second file"
_pwrite_byte 0x62 0 $blksz $testdir/file2 -d >> $seqres.full
_pwrite_byte 0x62 0 $blksz $testdir/file3 -d >> $seqres.full

_pwrite_byte 0x62 $((blksz * 16 - 512)) 512 $testdir/file2 -d >> $seqres.full
_pwrite_byte 0x62 $((blksz * 16 - 512)) 512 $testdir/file3 -d >> $seqres.full

_pwrite_byte 0x62 $((blksz * 48)) $blksz $testdir/file2 -d >> $seqres.full
_pwrite_byte 0x62 $((blksz * 48)) $blksz $testdir/file3 -d >> $seqres.full
_test_cycle_mount

echo "Compare files"
md5sum $testdir/file1 | _filter_test_dir
md5sum $testdir/file2 | _filter_test_dir
md5sum $testdir/file3 | _filter_test_dir

cmp -s $testdir/file1 $testdir/file2 || echo "Files 1-2 should not match (intentional)"
cmp -s $testdir/file1 $testdir/file3 || echo "Files 1-3 should not match (intentional)"
cmp -s $testdir/file2 $testdir/file3 || echo "Files 2-3 should match"

echo "Compare the CoW'd section to the before file"
_compare_range $testdir/file1 0 $testdir/file2 0 $blksz \
       || echo "Start sections do not match (intentional)"

_compare_range  $testdir/file1 $((blksz * 16 - 512)) \
		$testdir/file2 $((blksz * 16 - 512)) 512 \
       || echo "Middle sections do not match (intentional)"

_compare_range  $testdir/file1 $((blksz * 48 - 512)) \
		$testdir/file2 $((blksz * 48 - 512)) $blksz \
       || echo "End sections do not match (intentional)"

echo "Compare the CoW'd section to the after file"
_compare_range $testdir/file2 0 $testdir/file3 0 $blksz \
       || echo "Start sections do not match"

_compare_range  $testdir/file2 $((blksz * 16 - 512)) \
		$testdir/file3 $((blksz * 16 - 512)) 512 \
       || echo "Middle sections do not match"

_compare_range  $testdir/file2 $((blksz * 48 - 512)) \
		$testdir/file3 $((blksz * 48 - 512)) $blksz \
       || echo "End sections do not match"

echo "Compare the not CoW'd sections"
_compare_range $testdir/file1 $blksz $testdir/file2 $blksz 512 \
       || echo "Start sections of 1-2 do not match"
_compare_range $testdir/file2 $blksz $testdir/file3 $blksz 512 \
       || echo "Start sections of 2-3 do not match"

_compare_range  $testdir/file1 $((blksz * 16 - 1024)) \
		$testdir/file2 $((blksz * 16 - 1024)) 512 \
       || echo "Middle sections of 1-2 do not match"

_compare_range  $testdir/file2 $((blksz * 16 - 1024)) \
		$testdir/file3 $((blksz * 16 - 1024)) 512 \
       || echo "Middle sections of 2-3 do not match"

_compare_range  $testdir/file1 $((blksz * 48 - 1024)) \
		$testdir/file2 $((blksz * 48 - 1024)) 512 \
       || echo "End sections of 1-2 do not match"

_compare_range  $testdir/file2 $((blksz * 48 - 1024)) \
		$testdir/file3 $((blksz * 48 - 1024)) 512 \
       || echo "End sections of 2-3 do not match"

_compare_range  $testdir/file1 $((blksz * 16)) \
		$testdir/file2 $((blksz * 16)) 512 \
       || echo "Untouched sections of 1-2 do not match"

_compare_range  $testdir/file2 $((blksz * 16)) \
		$testdir/file3 $((blksz * 16)) 512 \
       || echo "Untouched sections of 2-3 do not match"

# success, all done
status=0
exit
