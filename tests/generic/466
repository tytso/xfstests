#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2017, Oracle and/or its affiliates.  All Rights Reserved.
#
# FS QA Test No. 466
#
# Check that high-offset reads and writes work.
#
. ./common/preamble
_begin_fstest auto quick rw

# Import common functions.
. ./common/filter

# real QA test starts here
_supported_fs generic
_require_scratch_nocheck
_require_block_device $SCRATCH_DEV

echo "Silence is golden"

# clear MKFS_OPTIONS which may contain user specified block size value, and
# _scratch_mkfs_sized will always use that value to create filesystem.
unset MKFS_OPTIONS

echo "Starting test" > $seqres.full
devsize=$(blockdev --getsize64 $SCRATCH_DEV)
min_blocksize=$(_fs_min_blocksize)
max_blocksize=$(_fs_max_blocksize)

for (( blocksize = min_blocksize ; blocksize <= max_blocksize ;
       blocksize = blocksize * 2)); do
	echo "+ Format blocksize $blocksize and mount" >> $seqres.full
	_scratch_unmount > /dev/null 2>&1
	# Try to format and mount with the given blocksize.  If they don't
	# succeed, move on to the next block size.
	if ! _scratch_mkfs_sized $devsize $blocksize >> $seqres.full 2>&1 ||
	   ! _try_scratch_mount >> $seqres.full 2>&1 ||
	   test "$(stat -f -c '%S' $SCRATCH_MNT)" -ne "$blocksize"; then
		echo "+++ Format and mount failed" >> $seqres.full
		continue
	fi

	testdir=$SCRATCH_MNT/test-$seq
	mkdir $testdir

	echo "++ Create the original files" >> $seqres.full
	bigoff=$(echo "2^63 - 2" | $BC_PROG)
	len=$(echo "2^63 - 1" | $BC_PROG)
	$XFS_IO_PROG -f -c "truncate $len" $testdir/file0 >> $seqres.full 2>&1
	if [ ! -s $testdir/file0 ]; then
		# If we can't set a large file size then don't bother
		# with this blocksize because the fs doesn't support it.
		echo "+++ High offset ftruncate failed" >> $seqres.full
		continue
	fi
	_pwrite_byte 0x61 $bigoff 1 $testdir/file1 >> $seqres.full

	echo "++ Check file creation" >> $seqres.full
	_scratch_cycle_mount

	expected="7ffffffffffffffe:  61  a"
	actual="$($XFS_IO_PROG -c "pread -v -q $bigoff 1" $testdir/file1)"
	if [ "$expected" = "$actual" ]; then
		echo "+++ Success!" >> $seqres.full
	else
		echo "+++ Discrepancy @ blocksize $blocksize" >> $seqres.full
		echo "Discrepancy @ blocksize $blocksize"
	fi

	echo "++ Check scratchfs" >> $seqres.full
	_check_scratch_fs
done

# success, all done
status=0
exit
