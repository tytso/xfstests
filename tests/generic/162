#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2015 Oracle, Inc.  All Rights Reserved.
#
# FS QA Test No. 162
#
# Test for race between dedupe and writing the dest file
#
. ./common/test_names
_set_seq_and_groups auto quick clone dedupe

trap "_cleanup; exit \$status" 0 1 2 3 7 15

_cleanup()
{
    cd /
    rm -rf $tmp.* $finished_file
    wait
}

# get standard environment, filters and checks
. ./common/rc
. ./common/filter
. ./common/reflink

# real QA test starts here
_require_scratch_dedupe

echo "Format and mount"
_scratch_mkfs > $seqres.full 2>&1
_scratch_mount >> $seqres.full 2>&1

testdir=$SCRATCH_MNT/test-$seq
finished_file=/tmp/finished
rm -rf $finished_file
mkdir $testdir

loops=512
nr_loops=$((loops - 1))
blksz=65536

echo "Initialize files"
echo >> $seqres.full
_pwrite_byte 0x61 0 $((loops * blksz)) $testdir/file1 >> $seqres.full
_pwrite_byte 0x61 0 $((loops * blksz)) $testdir/file2 >> $seqres.full
_scratch_cycle_mount

overwrite() {
	while [ ! -e $finished_file ]; do
		seq $nr_loops -1 0 | while read i; do
			_pwrite_byte 0x61 $((i * blksz)) $blksz $testdir/file2 >> $seqres.full
		done
	done
}

echo "Dedupe and rewrite the file!"
overwrite &
for i in `seq 1 2`; do
	seq $nr_loops -1 0 | while read i; do
		_dedupe_range   $testdir/file1 $((i * blksz)) \
				$testdir/file2 $((i * blksz)) $blksz >> $seqres.full
		[ $? -ne 0 ] && break
	done
done
echo "Finished dedupeing"
touch $finished_file
wait

# success, all done
status=0
exit
