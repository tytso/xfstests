#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
#
# FS QA Test No. 657
#
# Ensuring that copy on write in mmap mode works when the CoW
# range originally covers multiple extents. (MMAP version of generic/185,183)
#   - Create two files
#   - Reflink the odd blocks of the first file into a third file.
#   - Reflink the even blocks of the second file into the third file.
#   - mmap CoW across the halfway mark.
#   - Check that the files are now different where we say they're different.
#
. ./common/preamble
_begin_fstest auto quick clone

# Import common functions.
. ./common/filter
. ./common/reflink

_require_scratch_reflink

echo "Format and mount"
_scratch_mkfs > $seqres.full 2>&1
_scratch_mount >> $seqres.full 2>&1

testdir=$SCRATCH_MNT/test-$seq
mkdir $testdir

echo "Create the original files"
blksz=65536
_require_congruent_file_oplen $SCRATCH_MNT $blksz
nr=64
filesize=$((blksz * nr))
_pwrite_byte 0x61 0 $filesize $testdir/file1 >> $seqres.full
_pwrite_byte 0x62 0 $filesize $testdir/file2 >> $seqres.full
seq 0 2 $((nr-1)) | while read f; do
	_reflink_range $testdir/file1 $((blksz * f)) $testdir/file3 $((blksz * f)) $blksz >> $seqres.full
	_pwrite_byte 0x61 $((blksz * f)) $blksz $testdir/file3.chk >> $seqres.full
done
seq 1 2 $((nr-1)) | while read f; do
	_reflink_range $testdir/file2 $((blksz * f)) $testdir/file3 $((blksz * f)) $blksz >> $seqres.full
	_pwrite_byte 0x62 $((blksz * f)) $blksz $testdir/file3.chk >> $seqres.full
done
_scratch_cycle_mount

echo "Compare files"
md5sum $testdir/file1 | _filter_scratch
md5sum $testdir/file2 | _filter_scratch
md5sum $testdir/file3 | _filter_scratch
md5sum $testdir/file3.chk | _filter_scratch

echo "mmap CoW across the transition"
cowoff=$((filesize / 4))
cowsz=$((filesize / 2))
mmapsz=$((cowoff + cowsz))
_mwrite_byte 0x63 $cowoff $cowsz $mmapsz $testdir/file3 >> $seqres.full
_mwrite_byte 0x63 $cowoff $cowsz $mmapsz $testdir/file3.chk >> $seqres.full
_scratch_cycle_mount

echo "Compare files"
md5sum $testdir/file1 | _filter_scratch
md5sum $testdir/file2 | _filter_scratch
md5sum $testdir/file3 | _filter_scratch
md5sum $testdir/file3.chk | _filter_scratch

# success, all done
status=0
exit
