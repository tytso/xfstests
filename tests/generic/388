#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2016 Red Hat, Inc.  All Rights Reserved.
#
# FS QA Test No. 388
#
# Test XFS log recovery ordering on v5 superblock filesystems. XFS had a problem
# where it would incorrectly replay older modifications from the log over more
# recent versions of metadata due to failure to update metadata LSNs during log
# recovery. This could result in false positive reports of corruption during log
# recovery and permanent mount failure.
#
# To test this situation, run frequent shutdowns immediately after log recovery.
# Ensure that log recovery does not recover stale modifications and cause
# spurious corruption reports and/or mount failures.
#
. ./common/preamble
_begin_fstest shutdown auto log metadata recoveryloop

# Override the default cleanup function.
_cleanup()
{
	cd /
	rm -f $tmp.*
	$KILLALL_PROG -9 fsstress > /dev/null 2>&1
	_scratch_unmount > /dev/null 2>&1
}

# Import common functions.

# Modify as appropriate.
_supported_fs generic

_require_scratch
_require_local_device $SCRATCH_DEV
_require_scratch_shutdown
_require_command "$KILLALL_PROG" "killall"

echo "Silence is golden."

_scratch_mkfs >> $seqres.full 2>&1
_require_metadata_journaling $SCRATCH_DEV
_scratch_mount

while _soak_loop_running $((50 * TIME_FACTOR)); do
	($FSSTRESS_PROG $FSSTRESS_AVOID -d $SCRATCH_MNT -n 999999 -p 4 >> $seqres.full &) \
		> /dev/null 2>&1

	# purposely include 0 second sleeps to test shutdown immediately after
	# recovery
	sleep $((RANDOM % 3))
	_scratch_shutdown

	ps -e | grep fsstress > /dev/null 2>&1
	while [ $? -eq 0 ]; do
		$KILLALL_PROG -9 fsstress > /dev/null 2>&1
		wait > /dev/null 2>&1
		ps -e | grep fsstress > /dev/null 2>&1
	done

	# Toggle between rw and ro mounts for recovery. Quit if any mount
	# attempt fails so we don't shutdown the host fs.
	if [ $((RANDOM % 2)) -eq 0 ]; then
		_scratch_cycle_mount || _fail "cycle mount failed"
	else
		_scratch_cycle_mount "ro" || _fail "cycle ro mount failed"
		_scratch_cycle_mount || _fail "cycle rw mount failed"
	fi
done

# success, all done
status=0
exit
