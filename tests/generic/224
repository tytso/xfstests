#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2010 Dave Chinner.  All Rights Reserved.
#
# FS QA Test No. 224
#
# Delayed allocation at ENOSPC test
#
# Derived from a test case from Lachlan McIlroy and improved to
# reliably trigger a BUG in xfs_get_blocks(). Despite this XFS
# focus, the test can to run on any filesystem to exercise ENOSPC
# behaviour.
#
. ./common/preamble
_begin_fstest auto

# Override the default cleanup function.
_cleanup()
{
	rm -f $tmp.*
	rm -f $SCRATCH_MNT/testfile.*
}

# Import common functions.
. ./common/filter

# real QA test starts here
_supported_fs generic

_require_scratch

# make a 1GB filesystem
_scratch_mkfs_sized `expr 1024 \* 1024 \* 1024` > $seqres.full 2>&1
_scratch_mount >> $seqres.full 2>&1

# set the reserved block pool to almost empty for XFS
if [ "$FSTYP" = "xfs" ]; then
	$XFS_IO_PROG -x -c "resblks 4" $SCRATCH_MNT >> $seqres.full 2>&1
fi

FILES=1000
for i in `seq 0 1 $FILES`; do

	# set the file size to be 10MB - that way the direct IO will always try
	# to read at least 10MB even if only 4k was written. This allows
	# discarded delalloc pages that would have been beyond EOF to be
	# tripped over.
        (
		sleep 5
		$XFS_IO_PROG -f -c "truncate 10485760" $SCRATCH_MNT/testfile.$i
		dd if=/dev/zero of=$SCRATCH_MNT/testfile.$i bs=4k conv=notrunc
	) > /dev/null 2>&1 &
done
wait

for i in `seq 0 1 $FILES`; do
        dd of=/dev/null if=$SCRATCH_MNT/testfile.$i bs=512k iflag=direct > /dev/null 2>&1 &
done
wait
echo "*** Silence is golden ***"

# unmount and check dmesg, filtering out expected warnings about mixed
# direct and buffered I/O
_scratch_unmount
_check_dmesg _filter_aiodio_dmesg

status=$?
exit
