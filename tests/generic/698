#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2022 Christian Brauner (Microsoft).  All Rights Reserved.
#
# FS QA Test 698
#
# Test that users can changed group ownership of a file they own to a group
# they are a member of.
#
# Regression test for commit:
# 168f91289340 ("fs: account for group membership")
#
. ./common/preamble
_begin_fstest auto quick perms attr idmapped mount

# Override the default cleanup function.
_cleanup()
{
	cd /
	_umount $SCRATCH_MNT/target-mnt 2>/dev/null
	_umount $SCRATCH_MNT 2>/dev/null
	rm -r -f $tmp.*
}

_fixed_by_kernel_commit 168f91289340 \
	"fs: account for group membership"
_require_scratch
_require_chown
_require_idmapped_mounts
_require_test_program "vfs/mount-idmapped"
_require_user fsgqa2
_require_group fsgqa2
# Do this SECOND so that qa_user is fsgqa, and _user_do uses that account
_require_user fsgqa
_require_group fsgqa

user_foo=`id -u fsgqa`
group_foo=`id -g fsgqa`
user_bar=`id -u fsgqa2`
group_bar=`id -g fsgqa2`

setup_tree()
{
	mkdir -p $SCRATCH_MNT/source-mnt
	chmod 0777 $SCRATCH_MNT/source-mnt
	touch $SCRATCH_MNT/source-mnt/file1
	chown 65534:65534 $SCRATCH_MNT
	chown 65534:65534 $SCRATCH_MNT/source-mnt
	chown 65534:65535 $SCRATCH_MNT/source-mnt/file1

	mkdir -p $SCRATCH_MNT/target-mnt
	chmod 0777 $SCRATCH_MNT/target-mnt
}

# Setup an idmapped mount where uid and gid 65534 are mapped to fsgqa and uid
# and gid 65535 are mapped to fsgqa2.
setup_idmapped_mnt()
{
	$here/src/vfs/mount-idmapped \
		--map-mount=u:65534:$user_foo:1 \
		--map-mount=g:65534:$group_foo:1 \
		--map-mount=u:65535:$user_bar:1 \
		--map-mount=g:65535:$group_bar:1 \
		$SCRATCH_MNT/source-mnt $SCRATCH_MNT/target-mnt
}

# We've created a layout where fsgqa owns the target file but the group of the
# target file is owned by another group. We now test that user fsgqa can change
# the group ownership of the file to a group they control. In this case to the
# fsgqa group.
change_group_ownership()
{
	local path="$1"

	stat -c '%U:%G' $path
	_user_do "id -u --name; id -g --name; chgrp $group_foo $path"
	stat -c '%U:%G' $path
	_user_do "id -u --name; id -g --name; chgrp $group_bar $path > /dev/null 2>&1"
	stat -c '%U:%G' $path
}

run_base_test()
{
	mkdir -p $SCRATCH_MNT/source-mnt
	chmod 0777 $SCRATCH_MNT/source-mnt
	touch $SCRATCH_MNT/source-mnt/file1
	chown $user_foo:$group_foo $SCRATCH_MNT
	chown $user_foo:$group_foo $SCRATCH_MNT/source-mnt
	chown $user_foo:$group_bar $SCRATCH_MNT/source-mnt/file1

	echo ""
	echo "base test"
	change_group_ownership "$SCRATCH_MNT/source-mnt/file1"
	rm -rf "$SCRATCH_MNT/source-mnt"
}

# Basic test as explained in the comment for change_group_ownership().
run_idmapped_test()
{
	echo ""
	echo "base idmapped test"
	change_group_ownership "$SCRATCH_MNT/target-mnt/file1"
}

_scratch_mkfs >> $seqres.full
_scratch_mount

run_base_test
setup_tree
setup_idmapped_mnt
run_idmapped_test

# success, all done
status=0
exit
