#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2017 Oracle, Inc.  All Rights Reserved.
#
# FS QA Test No. 425
#
# Check that FIEMAP produces some output when we require an external
# block to hold extended attributes.
#
. ./common/test_names
_set_seq_and_groups auto quick attr

trap "_cleanup; exit \$status" 0 1 2 3 7 15

_cleanup()
{
	cd /
	rm -rf $tmp.*
	wait
}

# get standard environment, filters and checks
. ./common/rc
. ./common/filter
. ./common/attr

# real QA test starts here
_supported_fs generic
_require_scratch
_require_attrs
_require_xfs_io_command "fiemap" "-a"

echo "Format and mount"
_scratch_mkfs > $seqres.full 2>&1
_scratch_mount >> $seqres.full 2>&1

testdir=$SCRATCH_MNT/test-$seq
mkdir $testdir

echo "Create the original files"
testfile=$testdir/attrfile
touch $testfile
blk_sz=$(_get_file_block_size $SCRATCH_MNT)

# Assume each attr eats at least 20 bytes.  Try to fill 2 fs blocks.
max_attrs=$((2 * blk_sz / 20))

i=0
while [ $i -lt $max_attrs ]; do
	n="$(printf "%010d" $i)"
	$SETFATTR_PROG -n "user.$n" -v "$n" $testfile > $seqres.full 2>&1 || break
	i=$((i + 1))
done
sync

echo "Check attr extent counts"
f1=$(_count_attr_extents $testfile)
echo "$f1 xattr extents" >> $seqres.full
$XFS_IO_PROG -c 'fiemap -a -v' $testfile >> $seqres.full
test $f1 -gt 0 || echo "Expected at least one xattr extent."

_scratch_cycle_mount

echo "Check attr extent counts after remount"
f1=$(_count_attr_extents $testfile)
echo "$f1 xattr extents" >> $seqres.full
$XFS_IO_PROG -c 'fiemap -a -v' $testfile >> $seqres.full
test $f1 -gt 0 || echo "Expected at least one xattr extent."

# success, all done
status=0
exit
