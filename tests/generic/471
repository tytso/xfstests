#! /bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (c) 2017, SUSE Linux Products.  All Rights Reserved.
#
# FS QA Test No. 471
#
# write a file with RWF_NOWAIT and it would fail because there are no
# blocks allocated. Create a file with direct I/O and re-write it
# using RWF_NOWAIT. I/O should finish within 50 microsecods since
# block allocations are already performed.
#
. ./common/preamble
_begin_fstest auto quick rw

# Import common functions.
. ./common/populate
. ./common/filter
. ./common/attr

# real QA test starts here
_require_odirect
_require_test
_require_xfs_io_command pwrite -N

# Remove reminiscence of previously run tests
testdir=$TEST_DIR/$seq
if [ -e $testdir ]; then
	rm -Rf $testdir
fi

mkdir $testdir

# Btrfs is a COW filesystem, so a RWF_NOWAIT write will always fail with -EAGAIN
# when writing to a file range except if it's a NOCOW file and an extent for the
# range already exists or if it's a COW file and preallocated/unwritten extent
# exists in the target range. So to make sure that the last write succeeds on
# all filesystems, use a NOCOW file on btrfs.
if [ $FSTYP == "btrfs" ]; then
	_require_chattr C
	touch $testdir/f1
	$CHATTR_PROG +C $testdir/f1
fi

# Create a file with pwrite nowait (will fail with EAGAIN)
$XFS_IO_PROG -f -d -c "pwrite -N -V 1 -b 1M 0 1M" $testdir/f1

# Write the file without nowait
$XFS_IO_PROG -f -d -c "pwrite -S 0xaa -W -w -V 1 -b 1M 0 8M" $testdir/f1 | _filter_xfs_io

time_taken=`$XFS_IO_PROG -d -c "pwrite -S 0xbb -N -V 1 -b 1M 2M 1M" $testdir/f1 | awk '/^1/ {print $5}'`

# RWF_NOWAIT should finish within a short period of time so we are choosing
# a conservative value of 50 ms. Anything longer means it is waiting
# for something in the kernel which would be a fail.
if (( $(echo "$time_taken < 0.05" | bc -l) )); then
	echo "RWF_NOWAIT time is within limits."
else
	echo "RWF_NOWAIT took $time_taken seconds"
fi

$XFS_IO_PROG -c "pread -v 0 8M" $testdir/f1 | _filter_xfs_io_unique

# success, all done
status=0
exit
